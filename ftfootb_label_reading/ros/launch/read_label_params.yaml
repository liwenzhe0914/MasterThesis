# metric tag dimensions (in [m])
# float
metric_tag_width: 0.391
metric_tag_height: 0.065

# display the detections in a live image on/off
# bool
display_results: true


##### algorithm adjustment section #####

# target image size used for tag detection, the smaller the resolution the faster the detection (in pixels, -1=leave resolution as is)
# int
tag_detection_target_image_width: -1
tag_detection_target_image_height: -1

# 0 - load training data from raw images;  1 - load all letter or number symbols from one file and generate further training samples;  2 - load training data from yml file
# int
training_data_source: 1

# 1-KNN, 2-train svm, 3-load svm
# int
classifier: 3

# feature number: 1. HOG 2. LBP 3. BRIEF
# int
feature_number: 1

# single or combinations (pairs) of letters/numbers: 1. single 2. combinations
# int
single_or_combination: 1

# template matching OR feature representation: 1. TM, 2. FR, 3. both.
# int
recognition_method: 2

# template matching method: 0: SQDIFF \n 1: SQDIFF NORMED \n 2: CCORR \n 3: CCORR NORMED \n 4: COEFF \n 5: COEFF NORMED.
# int
template_matching_method: 5


